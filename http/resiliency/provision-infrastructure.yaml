AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation Template with an EC2 instance and a RDS
Parameters:
  AMI:
    Type: String
    Description: AMI of the region.
  EC2KeyPair:
    Description: >-
      This is used to ssh to the node. If you don't have a key, please create
      one from AWS console and rerun the script
    Type: 'AWS::EC2::KeyPair::KeyName'
  ALBCertificateARN:
    Type: String
    Description: >-
      Enter the ARN value of the certificate uploaded to ACM for Application
      Load Balancers
  BallerinaInstanceType:
    Description: 'EC2 instance type of the Ballerina Node [t2.micro is the free tier]'
    Type: String
    Default: m3.xlarge
    AllowedValues:
    - t2.nano
    - t1.micro
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - t2.xlarge
    - t2.2xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    ConstraintDescription: must be a valid EC2 instance type
  OS:
    Type: String
    Default: ubuntu
    Description: >-
      Enter target OS. This will be the username of the created EC2 instances as
      well.
  OSVersion:
    Type: String
    Default: '16.04'
    Description: Enter target OS version.
  JDK:
    Type: String
    Default: ORACLE_JDK8
    Description: Enter target JDK version.
    AllowedValues:
    - OPEN_JDK8
    - ORACLE_JDK8
  MavenVersion:
    Type: String
    Default: '3.3.9'
    Description: Enter required Maven version.
  CustomUserData:
    Type: String
    Default: "echo"
    Description: Enter custome user data scripts here.
Resources:
  BallerinaInstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group for Ballerina EC2 compute instances
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8140
        ToPort: 8140
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 9763
        ToPort: 9763
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 9443
        ToPort: 9443
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 9090
        ToPort: 9090
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
    Metadata:
      'AWS::CloudFormation::Designer':
        id: abbdb5e8-f28b-4bc6-8b63-da9595b59c4a
  BallerinaUnixInstance:
    Type: 'AWS::EC2::Instance'
    CreationPolicy:
      ResourceSignal:
        Count: '1'
        Timeout: PT60M
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: !Ref AMI
      InstanceType: !Ref BallerinaInstanceType
      KeyName: !Ref EC2KeyPair
      Monitoring: 'false'
      "BlockDeviceMappings" : [
      {
        "DeviceName" : "/dev/sda1",
        "Ebs" : { "VolumeSize" : "50" }
      },
      ]
      UserData: !Base64
        'Fn::Sub': |
          #cloud-boothook
          #!/bin/bash

          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          # Echoes all commands before executing.
          set -o verbose

          set -e
          set -o xtrace

          setup_java_env() {
          JDK=ORACLE_JDK8
          source /etc/environment

          echo JDK_PARAM=${JDK} >> /opt/testgrid/java.txt
          REQUESTED_JDK_PRESENT=$(grep "^${JDK}=" /etc/environment | wc -l)
          if [ $REQUESTED_JDK_PRESENT = 0 ]; then
          printf "The requested JDK, ${JDK}, not found in /etc/environment: \n $(cat /etc/environment)."
          exit 1; // todo: inform via cfn-signal
          fi
            JAVA_HOME=$(grep "^${JDK}=" /etc/environment | head -1 | sed "s:${JDK}=\(.*\):\1:g" | sed 's:"::g')

           echo ">> Setting up JAVA_HOME ..."
            JAVA_HOME_EXISTS=$(grep -r "JAVA_HOME=" /etc/environment | wc -l  )
            if [ $JAVA_HOME_EXISTS = 0 ]; then
              echo ">> Adding JAVA_HOME entry."
              echo JAVA_HOME=$JAVA_HOME >> /etc/environment
            else
              echo ">> Updating JAVA_HOME entry."
              sed -i "/JAVA_HOME=/c\JAVA_HOME=$JAVA_HOME" /etc/environment
          fi
            source /etc/environment
            echo "export JAVA_HOME=$JAVA_HOME" >> /etc/profile
                      source /etc/profile
            }

          mkdir -p /opt/testgrid/workspace
          #TODO: We need to figure out the default user in the system.
          #So, provided permissions to all the users. Need to fix!
          chmod 777 -R /opt/testgrid
          cd /opt/testgrid/workspace

          setup_java_env
          echo PATH=$JAVA_HOME/bin:/opt/testgrid/workspace/maven/bin/:$PATH >> /etc/environment

          source /etc/environment

          cat /dev/null > ~/.bash_history && history -c
          ${CustomUserData}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource BallerinaUnixInstance --region ${AWS::Region}
      Tags:
      - Key: Name
        Value: ballerina-data-intg-node
      SecurityGroups:
      - !Ref BallerinaInstanceSecurityGroup
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 8f512cce-69ee-45de-87ab-5aedd2a93d50
      "AWS::CloudFormation::Init" : {
        "config" : {
          "packages" : {
            "apt" : {
            }
          },
          "sources" : {
          },
          "files" : {
          }
        }
      }
Outputs:
  BallerinaPublicIP:
    Value: !Sub '${BallerinaUnixInstance.PublicIp}'
    Description: Private IP of the Ballerina Instance
  OS:
    Value: !Ref OS
Metadata:
  'AWS::CloudFormation::Designer':
    abbdb5e8-f28b-4bc6-8b63-da9595b59c4a:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 90
      z: 1
      embeds: []
    d0dcc88f-97f7-4d80-901a-f746d372a295:
      size:
        width: 60
        height: 60
      position:
        x: -80
        'y': 210
      z: 1
      embeds: []
    5352b4e9-46ed-4a23-8bdc-bafc3666cbbd:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 210
      z: 1
      embeds: []
      isassociatedwith:
      - d0dcc88f-97f7-4d80-901a-f746d372a295
    8f512cce-69ee-45de-87ab-5aedd2a93d50:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 210
      z: 1
      embeds: []
      isassociatedwith:
      - abbdb5e8-f28b-4bc6-8b63-da9595b59c4a
      dependson:
      - 5352b4e9-46ed-4a23-8bdc-bafc3666cbbd